function Screen.init 1
push constant 0
not
pop static 1
push constant 1
pop local 0
push constant 16
call Array.new 1
pop static 0
push constant 0
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label WHILE_EXP0
push local 0
push constant 15
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push local 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
push local 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 15
push static 0
add
push constant 32767
neg
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.clearScreen 0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 3
push constant 32
push argument 1
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
call Memory.peek 1
pop local 1
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 2
push static 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push static 0
add
pop pointer 1
push that 0
push local 1
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
push static 0
add
pop pointer 1
push that 0
sub
pop local 1
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push local 2
push static 0
add
pop pointer 1
push that 0
push local 1
and
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 2
push static 0
add
pop pointer 1
push that 0
or
pop local 1
label IF_FALSE2
label IF_END0
push constant 16384
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 15
push constant 0
pop local 0
push constant 0
pop local 1
push argument 0
pop local 5
push argument 1
pop local 6
push argument 2
push argument 0
sub
call Math.abs 1
pop local 2
push argument 3
push argument 1
sub
call Math.abs 1
pop local 3
push constant 0
pop local 4
push argument 2
push argument 0
gt
push argument 1
push argument 3
gt
and
pop local 7
push argument 2
push argument 0
lt
push argument 1
push argument 3
gt
and
pop local 8
push argument 2
push argument 0
gt
push argument 1
push argument 3
lt
and
pop local 9
push argument 2
push argument 0
lt
push argument 1
push argument 3
lt
and
pop local 10
push argument 0
push argument 2
eq
push argument 1
push argument 3
gt
and
pop local 11
push argument 0
push argument 2
eq
push argument 1
push argument 3
lt
and
pop local 12
push argument 0
push argument 2
gt
push argument 1
push argument 3
eq
and
pop local 13
push argument 0
push argument 2
lt
push argument 1
push argument 3
eq
and
pop local 14
push local 11
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 3
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
label IF_FALSE0
push local 12
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP0
push local 1
push local 3
lt
push local 1
push local 3
eq
or
not
if-goto WHILE_END0
push local 5
push local 6
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
label IF_FALSE1
push local 14
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label WHILE_EXP1
push local 0
push local 2
lt
push local 0
push local 2
eq
or
not
if-goto WHILE_END1
push local 5
push local 0
add
push local 6
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
label IF_FALSE2
push local 13
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 2
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
label IF_FALSE3
label WHILE_EXP2
push local 0
push local 2
lt
push local 0
push local 2
eq
or
push local 1
push local 3
lt
push local 1
push local 3
eq
or
and
not
if-goto WHILE_END2
push local 7
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 5
push local 0
add
push local 6
push local 1
sub
call Screen.drawPixel 2
pop temp 0
label IF_FALSE4
push local 8
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 5
push local 0
sub
push local 6
push local 1
sub
call Screen.drawPixel 2
pop temp 0
label IF_FALSE5
push local 9
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 5
push local 0
add
push local 6
push local 1
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE6
push local 10
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 5
push local 0
sub
push local 6
push local 1
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE7
push local 4
push constant 0
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push constant 1
add
pop local 0
push local 4
push local 3
add
pop local 4
goto IF_END8
label IF_FALSE8
push local 1
push constant 1
add
pop local 1
push local 4
push local 2
sub
pop local 4
label IF_END8
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Screen.drawRectangle 0
label WHILE_EXP0
push argument 1
push argument 3
lt
push argument 1
push argument 3
eq
or
not
if-goto WHILE_END0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 5
push argument 2
push constant 181
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
neg
pop local 0
push argument 1
push local 0
add
pop local 3
push argument 1
push local 0
add
pop local 4
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
sub
pop local 1
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
add
pop local 2
label WHILE_EXP0
push local 0
push argument 2
lt
not
if-goto WHILE_END0
push local 1
push local 3
push local 2
push local 4
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
push argument 1
push local 0
add
pop local 3
push argument 1
push local 0
add
pop local 4
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
sub
pop local 1
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
